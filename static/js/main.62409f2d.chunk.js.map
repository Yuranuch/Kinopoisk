{"version":3,"sources":["Components/SearchPage/SerchNavi/SearchNavi.module.css","assets/images/739.gif","Components/Common/Preloader/Preloader.module.css","Components/Common/formControls/FormsContols.module.css","Components/SearchPage/SearchPage.module.css","api/api.js","redux/reducer.js","Components/Common/Preloader/Preloader.js","Components/DetailsPage/DetailsPage.js","Components/SearchPage/FilmsBlock/FilmItem.js","utils/validators/validators.js","Components/Common/formControls/FormsControls.js","Components/SearchPage/SerchNavi/SearchInput.js","Components/SearchPage/SerchNavi/SerchNavi.js","Components/SearchPage/SearchPage.js","App.js","serviceWorker.js","redux/store.js","index.js","Components/SearchPage/FilmsBlock/FilmItem.module.css","Components/DetailsPage/DetailsPage.module.css"],"names":["module","exports","instanse","axios","baseURL","filmsAPI","filmName","year","currentPage","get","filmId","initialState","films","profile","isFetching","pageSize","totalFilmsCount","setFilms","type","toggleIsFetching","currentPageClick","Preloader","className","styles","preloader","src","alt","DetailsPage","this","props","match","params","setFilmId","detail","Title","Year","Runtime","BoxOffice","Actors","Poster","back","to","Component","WithUrlDataContainerComponent","withRouter","connect","state","filmsPagesPage","dispatch","then","res","film","data","setFilmIdThunkCreator","FilmItem","filmsContainer","imdbID","filmsAlign","filmPoster","frontInfo","title","frontInfoYear","yearTitle","requiredField","value","Input","input","meta","hasError","touched","error","SearchInput","optionsData","optionValue","optionData","searchFilm","e","newFilmName","currentTarget","getFilmName","searchYear","newYear","getYear","onSearchFilmClick","searchFilmClick","map","o","alignWrap","onSubmit","handleSubmit","searchWrap","logoInfo","tagline","taglineBack","searchInput","inputWrap","Field","inputStyle","name","component","placeholder","onChange","validate","summaryError","buttonWrap","onClick","select","id","reset","SearchInputReduxForm","reduxForm","form","SearchNavi","formData","console","log","searchContainerWrapper","searchContainer","SearchPage","getFilmsData","pageNumber","setPage","pageCount","pages","i","push","filmsData","f","searchPage","search","resetSettings","filmsBlockWrapper","length","startMessage","filmsBlock","paginationWrap","pagination","p","selectedPage","Response","Search","count","totalResults","Error","stopSubmit","_error","getFilmsThunkCreator","setPageThunkCreator","App","redirect","renderRedirect","path","Boolean","window","location","hostname","reducers","combineReducers","action","formReducer","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.62409f2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContainerWrapper\":\"SearchNavi_searchContainerWrapper__16OfZ\",\"alignWrap\":\"SearchNavi_alignWrap__1sGvP\",\"searchWrap\":\"SearchNavi_searchWrap__2rm8s\",\"searchContainer\":\"SearchNavi_searchContainer__1BfW7\",\"searchNavi\":\"SearchNavi_searchNavi__2mbG-\",\"searchInput\":\"SearchNavi_searchInput__2LD-k\",\"inputStyle\":\"SearchNavi_inputStyle__1QK3b\",\"inputWrap\":\"SearchNavi_inputWrap__3GLhq\",\"buttonWrap\":\"SearchNavi_buttonWrap__3X7qJ\",\"reset\":\"SearchNavi_reset__3XkoJ\",\"select\":\"SearchNavi_select__k6Ilt\",\"tagline\":\"SearchNavi_tagline__3yuPF\",\"taglineBack\":\"SearchNavi_taglineBack__3RNmU\",\"logoInfo\":\"SearchNavi_logoInfo__2fvoi\",\"summaryError\":\"SearchNavi_summaryError__tvKG0\"};","module.exports = __webpack_public_path__ + \"static/media/739.96ba406b.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__17wb4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsContols_error__XHgyJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchPage\":\"SearchPage_searchPage__3ef9t\",\"filmsBlockWrapper\":\"SearchPage_filmsBlockWrapper__2H7NI\",\"filmsBlock\":\"SearchPage_filmsBlock__3mb1K\",\"pagination\":\"SearchPage_pagination__38B2z\",\"paginationWrap\":\"SearchPage_paginationWrap__2XeyG\",\"selectedPage\":\"SearchPage_selectedPage__2Eu5W\",\"startMessage\":\"SearchPage_startMessage__2g3fF\"};","import * as axios from \"axios\";\r\n\r\nconst instanse = axios.create({\r\n    // withCredentials: true,\r\n    baseURL: 'http://www.omdbapi.com',\r\n\r\n})\r\n\r\nexport const filmsAPI = {\r\n    getFilms(filmName, year, currentPage) {\r\n        return instanse.get(`/?apikey=711ef504&s=${filmName}&y=${year}&page=${currentPage}`)\r\n    },\r\n\r\n    getFilmId(filmId) {\r\n        return instanse.get(`/?apikey=bcb1b6a3&i=${filmId}`)\r\n    }\r\n}","import {filmsAPI} from \"../api/api\"\r\nimport {stopSubmit} from \"redux-form\"\r\n\r\nexport const SET_FILMS = \"SET_FILMS\"\r\nexport const GET_FILM = \"GET_FILM\"\r\nexport const TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\"\r\nexport const CLEAR_ALL = \"CLEAR_ALL\"\r\nexport const CURRENT_PAGE_CLICK = \"CURRENT_PAGE_CLICK\"\r\nexport const GET_YEAR = \"GET_YEAR\"\r\nexport const GET_FILM_NAME = \"GET_FILM_NAME\"\r\nexport const SET_TOTAL_PAGE_COUNT = \"SET_TOTAL_PAGE_COUNT\"\r\n\r\nconst initialState = {\r\n    films: [],\r\n    profile: {},\r\n    isFetching: false,\r\n    pageSize: 10,\r\n    totalFilmsCount: 0,\r\n    currentPage: 1,\r\n    year: \"Select year\",\r\n    filmName: \"\"\r\n}\r\n\r\nexport const filmsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_FILMS:\r\n            return {\r\n                ...state,\r\n                films: action.films\r\n            }\r\n\r\n        case GET_FILM:\r\n            return {\r\n                ...state,\r\n                profile: action.film\r\n            }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        case CURRENT_PAGE_CLICK:\r\n\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n\r\n        case GET_YEAR:\r\n\r\n            return {\r\n                ...state,\r\n                year: action.year\r\n            }\r\n\r\n        case GET_FILM_NAME:\r\n            return {\r\n                ...state,\r\n                filmName: action.filmName\r\n            }\r\n\r\n        case SET_TOTAL_PAGE_COUNT:\r\n            return {\r\n                ...state,\r\n                totalFilmsCount: action.count\r\n            }\r\n    }\r\n    return state;\r\n}\r\n\r\n\r\nexport const setFilms = (films) => ({type: SET_FILMS, films})\r\nexport const getFilm = (film) => ({type: GET_FILM, film})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const currentPageClick = (currentPage) => ({type: CURRENT_PAGE_CLICK, currentPage})\r\nexport const getYear = (year) => (({type: GET_YEAR, year}))\r\nexport const getFilmName = (filmName) => ({type: GET_FILM_NAME, filmName})\r\nexport const setTotalPageCount = (count) => ({type: SET_TOTAL_PAGE_COUNT, count})\r\n\r\n//ThunkCreators\r\n\r\nexport const getFilmsThunkCreator = (film, year, currentPage) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        filmsAPI.getFilms(film, year, currentPage)\r\n            .then(res => {\r\n                dispatch(toggleIsFetching(false))\r\n                debugger\r\n                if(res.data.Response===\"True\") {\r\n                    dispatch(setFilms(res.data.Search))\r\n                    dispatch(setTotalPageCount(res.data.totalResults))\r\n                }\r\n                if(res.data.Response===\"False\"){\r\n                    if(res.data.Error === \"Too many results.\"){\r\n                        dispatch(stopSubmit(\"login\", {_error: \"Film not found\"}))\r\n                    }}\r\n\r\n\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport const setFilmIdThunkCreator = (filmId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        filmsAPI.getFilmId(filmId)\r\n            .then(res => {\r\n                dispatch(toggleIsFetching(false))\r\n                dispatch(getFilm(res.data))\r\n            })\r\n    }\r\n}\r\n\r\nexport const setPageThunkCreator = (film, year, pageNumber) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(currentPageClick(pageNumber))\r\n        filmsAPI.getFilms(film, year, pageNumber)\r\n            .then(res => {\r\n                dispatch(toggleIsFetching(false))\r\n                dispatch(setFilms(res.data.Search))\r\n\r\n            })\r\n    }}\r\n\r\n\r\n","import React from \"react\"\r\nimport preloader from \"../../../assets/images/739.gif\"\r\nimport styles from \"./Preloader.module.css\"\r\n\r\nfunction Preloader() {\r\n    return (\r\n        <div className={styles.preloader}>\r\n            <img src={preloader} alt=\"\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import React, {Component} from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport {NavLink, withRouter} from \"react-router-dom\"\r\nimport styles from \"./DetailsPage.module.css\"\r\nimport {setFilmIdThunkCreator, toggleIsFetching} from \"../../redux/reducer\"\r\nimport Preloader from \"../Common/Preloader/Preloader\"\r\n\r\nclass DetailsPage extends Component {\r\n\r\n    componentDidMount() {\r\n        let filmId = this.props.match.params.filmId\r\n        this.props.setFilmId(filmId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.detail}>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <div>\r\n                    <h1>{this.props.profile.Title}</h1>\r\n                    <div><b>Year</b> - {this.props.profile.Year}</div>\r\n                    <div><b>Runtime</b> - {this.props.profile.Runtime}</div>\r\n                    <div><b>BoxOffice</b> - {this.props.profile.BoxOffice}</div>\r\n                    <div><b>Actors</b> - {this.props.profile.Actors}</div>\r\n                </div>\r\n\r\n                <div>\r\n                    <img src={this.props.profile.Poster !== \"N/A\" ? this.props.profile.Poster :\r\n                        \"https://serial-go.com/uploads/no_poster.jpg\"} alt=\"\"/>\r\n                </div>\r\n                <NavLink className={styles.back} to=\"/search\">Back</NavLink>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.filmsPagesPage.profile,\r\n        films: state.filmsPagesPage.films,\r\n        isFetching: state.filmsPagesPage.isFetching,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetching(isFetching))\r\n        },\r\n        setFilmId: (filmId) => {\r\n            dispatch(setFilmIdThunkCreator(filmId))\r\n        }\r\n    }\r\n}\r\n\r\nconst WithUrlDataContainerComponent = withRouter(DetailsPage)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WithUrlDataContainerComponent)\r\n","import React from \"react\"\r\nimport {NavLink} from \"react-router-dom\"\r\nimport styles from \"./FilmItem.module.css\"\r\n\r\nfunction FilmItem(props) {\r\n    return (\r\n        <div className={styles.filmsContainer}>\r\n            <NavLink to={'/detail/' + props.imdbID}>\r\n                <div className={styles.filmsAlign}>\r\n                    <div className={styles.filmPoster}>\r\n                        <img src={props.Poster !== \"N/A\" ? props.Poster\r\n                            : \"https://serial-go.com/uploads/no_poster.jpg\"}/>\r\n                    </div>\r\n                    <div className={styles.frontInfo}>\r\n                        <div className={styles.title}>{props.Title}</div>\r\n                    </div>\r\n                    <div className={styles.frontInfoYear}>\r\n                        <div className={styles.yearTitle}>{props.Year}</div>\r\n                    </div>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilmItem\r\n","export const requiredField = value => {\r\n    if (value) return undefined;\r\n    return \"Please enter a movie\";\r\n}\r\n","import React from \"react\"\r\nimport styles from \"./FormsContols.module.css\"\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={hasError ? styles.error : \"\"}>\r\n            <div>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n\r\n    )\r\n}","import React, {Component} from \"react\"\r\nimport {NavLink} from \"react-router-dom\"\r\nimport {Field, reduxForm} from \"redux-form\"\r\nimport styles from \"./SearchNavi.module.css\"\r\nimport {requiredField} from \"../../../utils/validators/validators\"\r\nimport {Input} from \"../../Common/formControls/FormsControls\"\r\n\r\nclass SearchInput extends Component {\r\n\r\n    state = {\r\n        optionsData: [\r\n            {optionValue: \"Select year\", optionData: \"Select year\"},\r\n            {optionValue: \"1998\", optionData: 1998},\r\n            {optionValue: \"1999\", optionData: 1999},\r\n            {optionValue: \"2000\", optionData: 2000},\r\n            {optionValue: \"2001\", optionData: 2001},\r\n            {optionValue: \"2002\", optionData: 2002},\r\n            {optionValue: \"2003\", optionData: 2003},\r\n            {optionValue: \"2004\", optionData: 2004},\r\n            {optionValue: \"2006\", optionData: 2005},\r\n            {optionValue: \"2007\", optionData: 2007},\r\n            {optionValue: \"2008\", optionData: 2008},\r\n            {optionValue: \"2009\", optionData: 2009},\r\n            {optionValue: \"2010\", optionData: 2010},\r\n            {optionValue: \"2011\", optionData: 2011},\r\n            {optionValue: \"2012\", optionData: 2012},\r\n            {optionValue: \"2013\", optionData: 2013},\r\n            {optionValue: \"2014\", optionData: 2014},\r\n        ],\r\n    }\r\n\r\n    searchFilm = e => {\r\n        const newFilmName = e.currentTarget.value\r\n        this.props.getFilmName(newFilmName)\r\n\r\n    }\r\n\r\n    searchYear = e => {\r\n        const newYear = e.currentTarget.value\r\n        this.props.getYear(newYear)\r\n    }\r\n\r\n    onSearchFilmClick = () => {\r\n        this.props.searchFilmClick()\r\n    }\r\n\r\n    render() {\r\n\r\n        const optionsData = this.state.optionsData.map(o => <option value={o.optionValue}>{o.optionData}</option>)\r\n\r\n        return (<form className={styles.alignWrap} onSubmit={this.props.handleSubmit}>\r\n\r\n                <div className={styles.searchWrap}>\r\n                    <div className={styles.logoInfo}>\r\n                        <NavLink to=\"/search\">\r\n                            <span className={styles.tagline}>Choose a movie</span>\r\n                            <span className={styles.taglineBack}>for the evening</span>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={styles.searchInput}>\r\n                        <div className={styles.inputWrap}>\r\n                            <Field className={styles.inputStyle}\r\n                                   name={\"search\"}\r\n                                   type=\"text\"\r\n                                   component={Input}\r\n                                   placeholder=\"enter film\"\r\n                                   onChange={this.searchFilm}\r\n                                   validate={requiredField}/>\r\n                            {this.props.error && <div className={styles.summaryError}>{this.props.error}</div>}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <button className={styles.buttonWrap} onClick={this.onSearchFilmClick}>Search</button>\r\n                    </div>\r\n                    <div>\r\n                        <Field\r\n                            onChange={this.searchYear}\r\n                            className={styles.select}\r\n                            name={\"filmYear\"}\r\n                            component={\"select\"}\r\n                            id=\"\">\r\n                            {optionsData}\r\n                        </Field>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button className={styles.reset} onClick={this.props.reset}>Reset</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst SearchInputReduxForm = reduxForm({form: \"login\"})(SearchInput)\r\n\r\nexport default SearchInputReduxForm","import React, {Component} from \"react\"\r\nimport SearchInputReduxForm from \"./SearchInput\"\r\nimport styles from \"./SearchNavi.module.css\"\r\n\r\nclass SearchNavi extends Component {\r\n\r\n    onSubmit = (formData) => {\r\n        console.log(formData)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.searchContainerWrapper}>\r\n                <div className={styles.searchContainer}>\r\n                        <SearchInputReduxForm\r\n                            onSubmit={this.onSubmit}\r\n                            getYear={this.props.getYear}\r\n                            getFilmName={this.props.getFilmName}\r\n                            searchFilmClick={this.props.searchFilmClick} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchNavi\r\n","import React, {Component} from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport styles from \"./SearchPage.module.css\"\r\nimport FilmItem from \"./FilmsBlock/FilmItem\"\r\nimport SearchNavi from \"./SerchNavi/SerchNavi\"\r\n\r\nimport {\r\n    currentPageClick,\r\n    getFilmName, getFilmsThunkCreator,\r\n    getYear,\r\n    setPageThunkCreator,\r\n    toggleIsFetching\r\n} from \"../../redux/reducer\"\r\nimport Preloader from \"../Common/Preloader/Preloader\"\r\n\r\nclass SearchPage extends Component {\r\n\r\n    searchFilmClick = () => {\r\n        this.props.getFilmsData(this.props.filmName, this.props.year, this.props.currentPage)\r\n    }\r\n\r\n    getYear = (newYear) => {\r\n        this.props.getYear(newYear)\r\n    }\r\n    getFilmName = (newFilmName) => {\r\n        this.props.getFilmName(newFilmName)\r\n    }\r\n\r\n    currentPageClick = (pageNumber) => {\r\n        this.props.setPage(this.props.filmName, this.props.year, pageNumber)\r\n    }\r\n\r\n    render() {\r\n        const pageCount = this.props.totalFilmsCount / this.props.pageSize\r\n        const pages = []\r\n\r\n        for (let i = 1; i <= pageCount; i++)\r\n            pages.push(i)\r\n\r\n        const {films = []} = this.props\r\n        const filmsData = films.map(f =>\r\n            <FilmItem imdbID={f.imdbID} Title={f.Title} Year={f.Year} Poster={f.Poster}/>)\r\n\r\n        return (\r\n            <div className={styles.searchPage}>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <div className={styles.search}>\r\n                    <SearchNavi\r\n                        searchFilmClick={this.searchFilmClick}\r\n                        resetSettings={this.resetSettings}\r\n                        getYear={this.getYear}\r\n                        getFilmName={this.getFilmName}/>\r\n                    <div className={styles.filmsBlockWrapper}>\r\n                        {films.length === 0 ? <h1 className={styles.startMessage}>Please enter film name</h1> : \"\"}\r\n                        <div className={styles.filmsBlock}>\r\n                            {filmsData}\r\n                        </div>\r\n                        {films.length !== 0 ?<div className={styles.paginationWrap}>\r\n                            <div className={styles.pagination}>\r\n                                {pages.map(p => <span onClick={() => {this.currentPageClick(p)}}\r\n                                className={this.props.currentPage === p && styles.selectedPage}>{p}</span>)}\r\n                            </div>\r\n                        </div>: \"\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        films: state.filmsPagesPage.films,\r\n        isFetching: state.filmsPagesPage.isFetching,\r\n        pageSize: state.filmsPagesPage.pageSize,\r\n        totalFilmsCount: state.filmsPagesPage.totalFilmsCount,\r\n        currentPage: state.filmsPagesPage.currentPage,\r\n        year: state.filmsPagesPage.year,\r\n        filmName: state.filmsPagesPage.filmName,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetching(isFetching))\r\n        },\r\n        currentPageClick: (currentPage) => {\r\n            dispatch(currentPageClick(currentPage))\r\n        },\r\n        getYear: (year) => {\r\n            dispatch(getYear(year))\r\n        },\r\n        getFilmName: (filmName) => {\r\n            dispatch(getFilmName(filmName))\r\n        },\r\n        getFilmsData: (film, year, currentPage) => {\r\n            dispatch(getFilmsThunkCreator(film, year, currentPage))\r\n        },\r\n        setPage: (film, year, pageNumber) => {\r\n            dispatch(setPageThunkCreator(film, year, pageNumber))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage)\r\n\r\n\r\n","import React, {Component} from \"react\"\nimport {BrowserRouter, Redirect, Route} from \"react-router-dom\"\nimport \"./App.css\"\nimport DetailsPage from \"./Components/DetailsPage/DetailsPage\"\nimport SearchPage from \"./Components/SearchPage/SearchPage\"\n\nclass App extends Component {\n    state = {\n        redirect: true\n    }\n\n    renderRedirect = () => {\n        if (this.state.redirect) {\n            return <Redirect to=\"/search\" />\n        }\n    }\n\n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"wrapper\">\n                    {this.renderRedirect()}\n                        <div className=\"content\">\n                            <Route path=\"/search\" component={SearchPage}/>\n                            <Route path=\"/detail/:filmId?\" component={DetailsPage}/>\n                        </div>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {filmsReducer} from \"./reducer\"\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport thunkMiddleWare from \"redux-thunk\"\r\n\r\nconst reducers = combineReducers({\r\n    filmsPagesPage: filmsReducer,\r\n    form: formReducer\r\n})\r\n\r\nconst store = createStore(reducers,applyMiddleware(thunkMiddleWare))\r\n\r\nexport default store\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"./custom.scss\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport store from \"./redux/store\"\nimport {Provider} from \"react-redux\"\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n\n    , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filmsContainer\":\"FilmItem_filmsContainer__139wN\",\"filmsAlign\":\"FilmItem_filmsAlign__2sTQl\",\"frontInfo\":\"FilmItem_frontInfo__sZwlM\",\"frontInfoYear\":\"FilmItem_frontInfoYear__3vcdN\",\"filmPoster\":\"FilmItem_filmPoster__2IsDu\",\"title\":\"FilmItem_title__2dm-j\",\"yearTitle\":\"FilmItem_yearTitle__1Yq-J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detail\":\"DetailsPage_detail__3SYna\",\"back\":\"DetailsPage_back__3wIH4\"};"],"sourceRoot":""}